/// @file
/// @brief PC-Lint 9.x option file for linting QP-nano source code
/// @cond
///===========================================================================
/// Product: QP-nano
/// Last Updated for Version: 5.9.7
/// Date of the Last Update:  2017-08-20
///
///                    Q u a n t u m     L e a P s
///                    ---------------------------
///                    innovating embedded systems
///
/// Copyright (C) Quantum Leaps. All rights reserved.
///
/// This program is free software: you can redistribute it and/or modify
/// it under the terms of the GNU General Public License as published by
/// the Free Software Foundation, either version 3 of the License, or
/// (at your option) any later version.
///
/// Alternatively, this program may be distributed and modified under the
/// terms of Quantum Leaps commercial licenses, which expressly supersede
/// the GNU General Public License and are specifically designed for
/// licensees interested in retaining the proprietary status of their code.
///
/// This program is distributed in the hope that it will be useful,
/// but WITHOUT ANY WARRANTY; without even the implied warranty of
/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
/// GNU General Public License for more details.
///
/// You should have received a copy of the GNU General Public License
/// along with this program. If not, see <http://www.gnu.org/licenses/>.
///
/// Contact information:
/// https://state-machine.com
/// info@state-machine.com
///============================================================================
/// @endcond

// library headers
+libclass()       // lint all header files, including "foreign"
//-vf             // print names of all source files

+fdi              // start #include search in directory of the including file
-i.               // QP-nano port includes
-i../../include   // QP-nano includes

-si4              // sizeof(int)
-ss2              // sizeof(short)
-spD4             // sizeof(void *)
-spP4             // sizeof(function pointer)


au-misra2.lnt     // MISRA-C:2004 options
au-ds.lnt         // Dan Saks recommendations
qpn.lnt           // QP-nano options
-strong(AXJ)      // Strong type checking

// general
+e900             // prints a success message at the end

// QEP-nano
-estring(961,     // MISRA04-19.7(adv) function-like macro
 QEP_TRIG_,
 QEP_ENTER_,
 QEP_EXIT_,
 QEP_ACT_PTR_INC_)
-emacro(960,      // MISRA04-17.4(req) pointer increment
 QEP_ACT_PTR_INC_)
-efunc(661,       // Possible access of out-of-bounds pointer
 QMsm_execTatbl_)
-efunc(644,       // Variable 'entry' may not be initialized
 QMsm_enterHistory_)
// QF-nano
-emacro(960,      // MISRA04-17.4(req) pointer arithmetic
 QF_ROM_QUEUE_AT_)
-emacro(929,      // MISRA04-11.4(adv) cast pointer to pointer
 QF_ROM_ACTIVE_GET_,
 QF_ROM_QUEUE_AT_)
-efunc(527,       // MISRA04-14.17(req) Unreachable code
 QF_run)
-esym(960, 8.8)   // MISRA04-8.8(req) Seems to be checked incorrectly...

// QK-nano, QV-nano
-esym(960,        // MISRA04-8.7, could define variable at block scope
 QF_active,
 QF_readySet_,
 QF_log2Lkup,
 QF_invPow2Lkup,
 QF_maxActive_)
